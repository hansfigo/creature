generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email       String
  createdAt   DateTime  @default(now())
  displayName String
  uid         String    @id
  password    String
  posts       Post[] // Relasi ke post yang dimiliki oleh user
  Like        Like[]
  Comment     Comment[]
}

model Post {
  id          String    @id @default(uuid())
  title       String
  description String
  thumbnail   String
  model       String
  createdAt   DateTime  @default(now())
  userId      String 
  user        User      @relation(fields: [userId], references: [uid])
  tags        TagPost[]
  likes       Like[]
  comments    Comment[]
}

model Tag {
  id        String    @id @default(uuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  posts     TagPost[]
}

model TagPost {
  postId    String
  tagId     String
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tag       Tag      @relation(fields: [tagId], references: [id])

  @@id([postId, tagId])
}

model Like {
  id        String   @default(uuid())
  postId    String
  userId    String
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user      User     @relation(fields: [userId], references: [uid])

  @@id([postId, userId])
}

model Comment {
  id        String   @default(uuid())
  postId    String
  userId    String
  content   String
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user      User     @relation(fields: [userId], references: [uid])

  @@id([postId, userId])
}
